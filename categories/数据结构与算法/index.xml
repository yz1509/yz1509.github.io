<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>数据结构与算法 on HTT - ふわふわ時間</title>
    <link>https://yz1509.github.io/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/</link>
    <description>Recent content in 数据结构与算法 on HTT - ふわふわ時間</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Wed, 17 Jun 2020 11:15:10 +0000</lastBuildDate><atom:link href="https://yz1509.github.io/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>CRDTs in Redis</title>
      <link>https://yz1509.github.io/post/crdts-in-redis/</link>
      <pubDate>Wed, 17 Jun 2020 11:15:10 +0000</pubDate>
      
      <guid>https://yz1509.github.io/post/crdts-in-redis/</guid>
      <description>Redis 全球多活调研笔记。 CRDT 简单介绍 在 Conflict-free Replicated Data Types 一文中，作者依据传递消息内容的区别，提出了两种 CRDT： CvRDT(State-based Convergent Replicated Data Type): 基于状态的聚合复制数据类型 条件： 状</description>
    </item>
    
    <item>
      <title>CRDT-notes</title>
      <link>https://yz1509.github.io/post/crdt-notes/</link>
      <pubDate>Tue, 21 Apr 2020 11:02:30 +0000</pubDate>
      
      <guid>https://yz1509.github.io/post/crdt-notes/</guid>
      <description>CRDT 学习笔记。 CRDT 相关资源 CRDT wiki CRDT Website CRDT Research Awesome CRDT 背景知识 A CRDT Primer Part I: Defanging Order Theory Order Definition An Order set is a binary relation $\le$ on a set $\mathcal{S}$, written $(\mathcal{S},\le)$. Core concepts If we can say that $a \le b$ or $b \le a$, then we know that $a$ is comparable to $b$.</description>
    </item>
    
    <item>
      <title>图</title>
      <link>https://yz1509.github.io/post/%E5%9B%BE/</link>
      <pubDate>Thu, 26 Jul 2018 13:17:37 +0000</pubDate>
      
      <guid>https://yz1509.github.io/post/%E5%9B%BE/</guid>
      <description>简单介绍图及其相关算法。 什么是图 定义 一个图 $G = (V, E)$ 由顶点（或结点）的非空集 $V$ 和边的集合 $E$ 构成，每条边有一个或两个顶点与它相连，这样的顶点称为</description>
    </item>
    
    <item>
      <title>树</title>
      <link>https://yz1509.github.io/post/%E6%A0%91/</link>
      <pubDate>Wed, 25 Jul 2018 15:06:19 +0000</pubDate>
      
      <guid>https://yz1509.github.io/post/%E6%A0%91/</guid>
      <description>主要介绍二叉树和红黑树。 什么是树 定义 1 树是没有简单回路的连通无向图。 定义 2 有根树是指定一个顶点作为根并且每条边的方向都离开根的树。 二叉树 如果</description>
    </item>
    
    <item>
      <title>排序算法</title>
      <link>https://yz1509.github.io/post/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/</link>
      <pubDate>Thu, 19 Jul 2018 10:07:14 +0000</pubDate>
      
      <guid>https://yz1509.github.io/post/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/</guid>
      <description>掌握了排序算法就不会失业.jpg 前言 排序算法可以分为内部排序和外部排序，内部排序是数据记录在内存中进行排序，而外部排序是因排序的数据很大，一</description>
    </item>
    
    <item>
      <title>分治算法</title>
      <link>https://yz1509.github.io/post/%E5%88%86%E6%B2%BB%E7%AE%97%E6%B3%95/</link>
      <pubDate>Wed, 18 Jul 2018 21:59:06 +0000</pubDate>
      
      <guid>https://yz1509.github.io/post/%E5%88%86%E6%B2%BB%E7%AE%97%E6%B3%95/</guid>
      <description>分治算法学习笔记。 分治的基本概念 把一个任务，分成形式和原任务相同，但规模更小的几个部分任务 (通常是两个部分)，分别完成，或只需要选一部分完成</description>
    </item>
    
    <item>
      <title>动态规划</title>
      <link>https://yz1509.github.io/post/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/</link>
      <pubDate>Wed, 18 Jul 2018 21:28:58 +0000</pubDate>
      
      <guid>https://yz1509.github.io/post/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/</guid>
      <description>动态规划算法学习笔记。 定义 Dynamic Programming (also known as dynamic optimization) is a method for solving a complex problem by breaking it down into a collection of simpler subproblems. 本质:是对问题状态的定义和状态转移方程的定义。 解题思路 将原问题分</description>
    </item>
    
  </channel>
</rss>
