<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>thrift on HTT - ふわふわ時間</title>
    <link>https://yz1509.github.io/tags/thrift/</link>
    <description>Recent content in thrift on HTT - ふわふわ時間</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Tue, 30 Jul 2019 22:57:40 +0000</lastBuildDate><atom:link href="https://yz1509.github.io/tags/thrift/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Thrift-Protocol 概述</title>
      <link>https://yz1509.github.io/post/thrift-protocol%E6%A6%82%E8%BF%B0/</link>
      <pubDate>Tue, 30 Jul 2019 22:57:40 +0000</pubDate>
      
      <guid>https://yz1509.github.io/post/thrift-protocol%E6%A6%82%E8%BF%B0/</guid>
      <description>Thrift 协议层简单介绍。 协议层类关系图 协议层相关的类主要实现与数据传输格式封装的协议相关的内容。可以发现，所有的协议类都直接或间接继承 TProtocol 类，协议层</description>
    </item>
    
    <item>
      <title>Thrift-Transport 概述</title>
      <link>https://yz1509.github.io/post/thrift-transport%E6%A6%82%E8%BF%B0/</link>
      <pubDate>Tue, 30 Jul 2019 22:57:26 +0000</pubDate>
      
      <guid>https://yz1509.github.io/post/thrift-transport%E6%A6%82%E8%BF%B0/</guid>
      <description>Thrift 传输层简单介绍。 传输层类关系图 传输层类关系图主要分为三部分来看： 抽象基类 TTransport，它是所有传输类的基类，有很大一部分类直接从它</description>
    </item>
    
    <item>
      <title>Thrift 概述</title>
      <link>https://yz1509.github.io/post/thrift%E6%A6%82%E8%BF%B0/</link>
      <pubDate>Fri, 26 Jul 2019 23:48:45 +0000</pubDate>
      
      <guid>https://yz1509.github.io/post/thrift%E6%A6%82%E8%BF%B0/</guid>
      <description>Thrift 是一个基于静态代码生成的跨语言的RPC协议栈实现，它可以生成包括 C++, Java, Python, Ruby, PHP 等主流语言的代码，这些代码实现了 RPC 的协议层和传输层功能，从而让用</description>
    </item>
    
  </channel>
</rss>
